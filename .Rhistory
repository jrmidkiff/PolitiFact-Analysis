select(Rank, Subject, `Total Ratings`, `Mean Truthfulness Score`)
kable(table_of_topics, align = c("c", "l", "r", "r"),
caption = "Most Discussed Subjects in PolitiFact Ratings")
# Follow these directions STEP BY STEP http://nickstrayer.me/RMarkdown_Sites_tutorial/
# Must always have an index.Rmd file
# Must always save the index.Rmd and the other .Rmd files running the below commands
setwd("D:/Everything/R/Politifact Investigation/PolitiFact-Analysis/PolitiFact-Analysis")
rmarkdown::render_site()
democrats
party_statistical_test
democrats
republicans
party_politicians <- verified_people_speakers %>%
group_by(Party, rating) %>%
summarise(`Total Statements` = sum(n))
party_politicians <- left_join(party_politicians, values, by = c("rating" = "rating")) %>%
mutate(score = value * `Total Statements`) %>%
group_by(Party) %>%
summarise(Total_Statements = sum(`Total Statements`),
Score = sum(score)) %>%
mutate(Final_Ratings = Score / Total_Statements)
added_row <- tibble(Party = "Average Major U.S. Politician",
Total_Statements = sum(party_politicians$Total_Statements),
Score = sum(party_politicians$Score),
Final_Ratings = Score / Total_Statements)
party_politicians <- party_politicians %>%
bind_rows(added_row) %>%
mutate(Party = as_factor(Party),
Party = fct_relevel(Party, "Average Major U.S. Politician", after = 2))
ggplot(party_politicians, aes(x = Party, y = Final_Ratings, fill = Party,
label = round(Final_Ratings, 3))) +
geom_col(size = 1, color = "black") +
scale_fill_manual(values = c("Democratic" = "#1A80C4", "Republican" = "#CC3D3D", "Average Major U.S. Politician" = "#735F81"), guide = "none") +
labs(x = "", y = "",
title = "Mean Truthfulness Score for Major Politicians' Statements by Party",
subtitle = str_c("Includes ",
comma_format()(sum(party_politicians %>%
filter(Party == c("Democratic", "Republican")) %>%
select(Total_Statements))),
" statements rated by PolitiFact from ",
nrow(verified_people_speakers %>%
group_by(name) %>%
summarise(n = n())),
" current and recent major U.S. politicians, including:\nPresidents, Vice-Presidents, Presidential Candidates, Senators, Representatives, and Governors.")) +
geom_hline(yintercept = 0, size = 1.5, linetype = "twodash") +
geom_vline(xintercept = 2.5, size = 1.5, linetype = "solid") +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(color = c("#1A80C4", "#CC3D3D", "#735F81"), face = "bold"),
panel.grid.major.x = element_blank()) +
geom_label()
final_test <- z.test(x = democrats$value, y = republicans$value,
sigma.x = sd(democrats$value), sigma.y = sd(republicans$value),
alternative = "two.sided", conf.level = 0.99)
save.image("D:/Everything/R/Politifact Investigation/Final_Final_Workspace.Rdata") #Save the workspace so I can use it in the second one
# Follow these directions STEP BY STEP http://nickstrayer.me/RMarkdown_Sites_tutorial/
# Must always have an index.Rmd file
# Must always save the index.Rmd and the other .Rmd files running the below commands
setwd("D:/Everything/R/Politifact Investigation/PolitiFact-Analysis/PolitiFact-Analysis")
rmarkdown::render_site()
# Follow these directions STEP BY STEP http://nickstrayer.me/RMarkdown_Sites_tutorial/
# Must always have an index.Rmd file
# Must always save the index.Rmd and the other .Rmd files running the below commands
setwd("D:/Everything/R/Politifact Investigation/PolitiFact-Analysis/PolitiFact-Analysis")
rmarkdown::render_site()
name
webpage
load("D:/Everything/R/Politifact Investigation/Final_Final_Workspace.Rdata")
final_test
politifact
unique(politifact$website)
unique(politifact$Type)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(stringr)
library(tidytext)
library(scales)
library(RColorBrewer)
library(rvest)
library(forcats)
library(knitr)
library(BSDA)
rm(list = ls()) #Careful, this will wipe out your environment
#Note to self, if the data is fresh and you don't want to rerun everything, comment all code sections and put in
load("D:/Everything/R/Politifact Investigation/Final_Final_Workspace.RData")
# Scrape#########
# I recommend that you minimize everything (Alt + O) and then uncover it section by section as you go through it since it's a lot of code. I'm going to clear the envirnoment first and then save everything as an image that I can then use for the other page without code.
webpage <- read_html("http://www.politifact.com/truth-o-meter/statements/")
no_pages <- html_text(html_nodes(webpage, '.step-links__current'))
no_pages <- as.integer(
str_extract(no_pages, "\\d{3,4}(?=\n)"))
name <- vector("list", length = no_pages)
source <- vector("list", length = no_pages)
date <- vector("list", length = no_pages)
picture_rating <- vector("list", length = no_pages)
statement_text <- vector("list", length = no_pages)
explanation_text <- vector("list", length = no_pages)
rating <- vector("list", length = no_pages)
for (i in seq_along(1:length(name))) {
webpage <- read_html(
str_c("http://www.politifact.com/truth-o-meter/statements/?page=", i))
politifact_scrape <- function(x) {
as_tibble(
html_text(
html_nodes(webpage, x)))
}
name[[i]] <- politifact_scrape('.statement__source a')
source[[i]] <- politifact_scrape('.statement__edition a')
date[[i]] <- politifact_scrape('.article__meta')
statement_text[[i]] <- politifact_scrape('.statement__text')
explanation_text[[i]] <- politifact_scrape('.quote')
#Take the image, use the alt-text to find the rating
attributes <- html_attrs(
html_nodes(webpage, '.meter img'))
for (j in seq_along(attributes)) {
rating[[i]][[j]] <- attributes[[j]][[2]]
}
rating[[i]] <- as_tibble(rating[[i]])
Sys.sleep(time = 3) # Do a 3 second pause before running the loop again
# This should take approximately 4 seconds (1 second of 'for loop' run time
# plus a 3 second mandatory wait) times 700-some pages divided by 60 seconds per
# minute = ~50 minutes
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(stringr)
library(tidytext)
library(scales)
library(RColorBrewer)
library(rvest)
library(forcats)
library(knitr)
library(BSDA)
rm(list = ls()) #Careful, this will wipe out your environment
#Note to self, if the data is fresh and you don't want to rerun everything, comment all code sections and put in
load("D:/Everything/R/Politifact Investigation/Final_Final_Workspace.RData")
# Follow these directions STEP BY STEP http://nickstrayer.me/RMarkdown_Sites_tutorial/
# Must always have an index.Rmd file
# Must always save the index.Rmd and the other .Rmd files running the below commands
setwd("D:/Everything/R/Politifact Investigation/PolitiFact-Analysis/PolitiFact-Analysis")
rmarkdown::render_site()
# Here is the R code that generated this entire analysis feel free to copy sections of it but if you're re-running the entire thing, please attribute it to me.
# Code author:  James Midkiff
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(stringr) #I love this package and Regular Expressions
library(tidytext)
library(scales)
library(RColorBrewer)
library(rvest) #Scraping package - highly recommend following the tutorial and using a CSS Selector
library(forcats)
library(knitr) #For RMarkdown
library(BSDA) #Used for Z-Test only
rm(list = ls()) #Careful, this will wipe out your environment
#Truth-o-Meter Summary Stats
truth_o_meter_ratings <- politifact %>%
rename(Rating = rating) %>%
group_by(Rating) %>%
summarise(Total_Ratings = comma_format()(n())) %>%
mutate(`Percent of Total Ratings` = Total_Ratings / sum(Total_Ratings))
load("D:/Everything/R/Politifact Investigation/Final_Final_Workspace.RData")
#Truth-o-Meter Summary Stats
truth_o_meter_ratings <- politifact %>%
rename(Rating = rating) %>%
group_by(Rating) %>%
summarise(Total_Ratings = comma_format()(n())) %>%
mutate(`Percent of Total Ratings` = Total_Ratings / sum(Total_Ratings))
truth_o_meter_ratings
#The locations/editions of PolitiFact summary stats
locations <- politifact %>%
group_by(source) %>%
mutate(Founded = min(year(date))) %>%
group_by(source, Founded, politifact_location) %>%
summarise(Total_Ratings = comma_format()(n())) %>%
arrange(-Total_Ratings) %>%
ungroup() %>%
mutate(`Percentage of Total Ratings` = percent_format()(Total_Ratings / sum(Total_Ratings))) %>%
rename(Issuer = source, Type = politifact_location)
politifact %>% summarise(Total_Ratings = comma_format()(n()))
politifact %>% group_by(source, Founded, politifact_location) summarise(Total_Ratings = comma_format()(n()))
politifact %>% group_by(source, Founded, politifact_location) %>% summarise(Total_Ratings = comma_format()(n()))
politifact %>%
group_by(source) %>%
mutate(Founded = min(year(date))) %>%
group_by(source, Founded, politifact_location) %>%
summarise(Total_Ratings = comma_format()(n()))
#The locations/editions of PolitiFact summary stats
locations <- politifact %>%
group_by(source) %>%
mutate(Founded = min(year(date))) %>%
group_by(source, Founded, politifact_location) %>%
summarise(Total_Ratings = n()) %>%
arrange(-Total_Ratings) %>%
ungroup() %>%
mutate(`Percentage of Total Ratings` = percent_format()(Total_Ratings / sum(Total_Ratings))) %>%
rename(Issuer = source, Type = politifact_location)
locations <- locations %>%
add_column(Rank = 1:nrow(locations)) %>%
select(Rank, everything())
#Merging in the electoral votes for each state, from https://state.1keydata.com/state-electoral-votes.php
#don't forget Washington DC
electoral_votes <- tribble(
~US_State,	~`Electoral Votes`,
"Alabama", 9,
"Montana", 3,
"Alaska", 3,
"Nebraska", 5,
"Arizona", 11,
"Nevada", 6,
"Arkansas", 6,
"New Hampshire", 4,
"California", 55,
"New Jersey", 14,
"Colorado", 9,
"New Mexico", 5,
"Connecticut", 7,
"New York", 29,
"Delaware", 3,
"North Carolina", 15,
"Florida", 29,
"North Dakota", 3,
"Georgia", 16,
"Ohio", 18,
"Hawaii", 4,
"Oklahoma", 7,
"Idaho", 4,
"Oregon", 7,
"Illinois", 20,
"Pennsylvania", 20,
"Indiana", 11,
"Rhode Island", 4,
"Iowa", 6,
"South Carolina", 9,
"Kansas", 6,
"South Dakota", 3,
"Kentucky", 8,
"Tennessee", 11,
"Louisiana", 8,
"Texas", 38,
"Maine", 4,
"Utah", 6,
"Maryland", 10,
"Vermont", 3,
"Massachusetts", 11,
"Virginia", 13,
"Michigan", 16,
"Washington", 12,
"Minnesota", 10,
"West Virginia", 5,
"Mississippi", 6,
"Wisconsin", 10,
"Missouri", 10,
"Wyoming", 3,
"Washington D.C.", 3)
locations <-
locations %>%
separate(Issuer, c("A", "State"), sep = 11, remove = FALSE)
locations <- left_join(locations, electoral_votes, by = c("State" = "US_State"))%>%
select(-A, -State) %>%
mutate(Total_Ratings = comma_format()(Total_Ratings)) %>%
rename(`Total Ratings` = Total_Ratings) %>%
select(everything(), `Electoral Votes`)
locations
kable(locations, align = c("l", "l", "r", "r", "r", "r", "r"),
caption = "The Various PolitiFact Editions")
final_test
View(not_joined)
both_10s
truth_o_meter_ratings
ggplot(truth_o_meter_ratings, aes(x = Rating, y = Proportion, fill = Rating)) +
labs(title = "PolitiFact Truth-O-Meter Ratings Since 2017") +
geom_col(color = "black", size = 1) +
geom_label(label = comma_format()(truth_o_meter_ratings$Total_Ratings)) +
scale_fill_manual(values = truth_o_meter_colors) +
scale_y_continuous(labels = percent) +
theme(legend.position = "none")
View(politifact)
# Follow these directions STEP BY STEP http://nickstrayer.me/RMarkdown_Sites_tutorial/
# Must always have an index.Rmd file
# Must always save the index.Rmd and the other .Rmd files running the below commands
setwd("D:/Everything/R/Politifact Investigation/PolitiFact-Analysis/PolitiFact-Analysis")
rmarkdown::render_site()
?open.connection
# Follow these directions STEP BY STEP http://nickstrayer.me/RMarkdown_Sites_tutorial/
# Must always have an index.Rmd file
# Must always save the index.Rmd and the other .Rmd files running the below commands
setwd("D:/Everything/R/Politifact Investigation/PolitiFact-Analysis/PolitiFact-Analysis")
rmarkdown::render_site()
locations
#Most important Editions
top_x_issuers <- locations %>%
filter(`Percentage of Total Ratings` >= 1) %>% #Only takes those with individually more than 1% of the ratings
mutate(Cumulative_Sum = percent_format()(cumsum(
as.numeric(
str_replace_all(`Percentage of Total Ratings`, "[[:punct:]]", "")) / 1000)))
top_x_issuers
# Follow these directions STEP BY STEP http://nickstrayer.me/RMarkdown_Sites_tutorial/
# Must always have an index.Rmd file
# Must always save the index.Rmd and the other .Rmd files running the below commands
setwd("D:/Everything/R/Politifact Investigation/PolitiFact-Analysis/PolitiFact-Analysis")
rmarkdown::render_site()
load("D:/Everything/R/Politifact Investigation/Final_Final_Workspace.RData")
final_test
?z.test
test <- z.test(x = democrats$value, y = republicans$value, alternative = "two-sided",
sigma.x = sd(democrats$value), sigma.y = sd(republicans$value), conf.level = 0.99)
test <- z.test(x = democrats$value, y = republicans$value, alternative = "two.sided",
sigma.x = sd(democrats$value), sigma.y = sd(republicans$value), conf.level = 0.99)
test
final_test <- z.test(x = democrats$value, y = republicans$value, alternative = "two.sided",
sigma.x = sd(democrats$value), sigma.y = sd(republicans$value), conf.level = 0.99)
round(sd(democrats$value), 3)
round(sd(republicans$value), 3)
round(mean(democrats$value) - mean(republicans$value), 3)
round(final_test$conf.int[[1]], 3)
round(final_test$conf.int[[2]], 3)
# Follow these directions STEP BY STEP http://nickstrayer.me/RMarkdown_Sites_tutorial/
# Must always have an index.Rmd file
# Must always save the index.Rmd and the other .Rmd files running the below commands
setwd("D:/Everything/R/Politifact Investigation/PolitiFact-Analysis/PolitiFact-Analysis")
rmarkdown::render_site()
# Follow these directions STEP BY STEP http://nickstrayer.me/RMarkdown_Sites_tutorial/
# Must always have an index.Rmd file
# Must always save the index.Rmd and the other .Rmd files running the below commands
setwd("D:/Everything/R/Politifact Investigation/PolitiFact-Analysis/PolitiFact-Analysis")
rmarkdown::render_site()
?include
load("D:/Everything/R/Politifact Investigation/Final_Final_Workspace.RData")
View(politifact)
?html_attrs
library(rvest)
?html_attrs
# Follow these directions STEP BY STEP http://nickstrayer.me/RMarkdown_Sites_tutorial/
# Must always have an index.Rmd file
# Must always save the index.Rmd and the other .Rmd files running the below commands
setwd("D:/Everything/R/Politifact Investigation/PolitiFact-Analysis/PolitiFact-Analysis")
rmarkdown::render_site()
#SEE STICKY NOTE!!!
# Here is the R code that generated this entire analysis feel free to copy sections of it but if you're re-running the entire thing, please attribute it to me.
# Code author:  James Midkiff
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(stringr) #I love this package and Regular Expressions
library(tidytext)
library(scales)
library(RColorBrewer)
library(rvest) #Scraping package - highly recommend following the tutorial and using a CSS Selector
library(forcats)
library(knitr) #For RMarkdown
library(BSDA) #Used for Z-Test only
rm(list = ls()) #Careful, this will wipe out your environment
ggplot(year_score_all %>% slice(5:nrow(year_score_all)), #Lop off the first 4 rows because they're NA
aes(x = revised_date + 15, y = Score, fill = Score)) + #Add 15 days to each month so they align better
geom_rect(xmin = ymd("2016-Nov-8") - 365, xmax = ymd("2016-Nov-8"),
ymin = -3, ymax = 2, fill = "gray75", color = "black", linetype = "dashed", size = .8) +
geom_rect(xmin = ymd("2012-Nov-6") - 365, xmax = ymd("2012-Nov-6"),
ymin = -3, ymax = 2, fill = "gray75", color = "black", linetype = "dashed", size = .8) +
geom_rect(xmin = ymd("2008-Nov-4") - 365, xmax = ymd("2008-Nov-4"),
ymin = -3, ymax = 2, fill = "gray75", color = "black", linetype = "dashed", size = .8) +
geom_col(color = "black", size = 1) +
geom_smooth(size = 1.7, color = "royalblue4", se = FALSE) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
scale_y_continuous(breaks = seq(-1.5, 0.5, 0.25)) +
scale_fill_continuous(low =  "#E40602", high = "#71BF44") +
theme(legend.position = "none",
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 10)) +
labs(x = "",
title = "PolitiFact Mean Truthfulness Score per Month",
subtitle = "Only months with 30 or more ratings are included. Shaded areas indicate the 12 months prior to a U.S. presidential election") +
geom_point(data = worst_month, aes(x = revised_date + 15, y = Score - .10),
size = 5, color = "black", fill = "red", shape = 24, stroke = 2,
inherit.aes = FALSE) +
geom_text(data = worst_month, aes(x = revised_date + 15, y = Score - .2),
label = "Minimum", inherit.aes = FALSE, color = "black", fontface = "bold")
load("D:/Everything/R/Politifact Investigation/Final_Final_Workspace.RData")
ggplot(trump_web_analysis %>% filter(revised_date >= mdy("January 1, 2014")),
aes(x = revised_date + 15, y = Sub_Score, fill = analysis,
color = analysis, group = analysis)) + #Add 15 days to each month so they align better
geom_rect(xmin = ymd("2016-Nov-8") - 365, xmax = ymd("2016-Nov-8"),
ymin = -3, ymax = 2, fill = "gray75", color = "black", linetype = "dashed", size = .8) +
geom_col(color = "black", size = 1) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
scale_fill_manual("", values = c("Website" = "#c118ec", "Trump" = "#ffb00a", "Other" = "#808080"),
position = "bottom") +
scale_y_continuous(breaks = seq(-1.25, 0.5, 0.25)) +
labs(title = "PolitiFact Mean Truthfulness Score per Month, 2014 - Present",
x = "", y = "Monthly Average",
subtitle = "Shaded area indicates 12 months prior to the November 8, 2016 presidential election. Mean Truthfulness Scores are additive for Donald Trump, Websites, and Other.") +
theme(legend.position = "bottom",
legend.box.margin = margin(t = -20),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 10)) +
guides(fill = guide_legend(reverse = TRUE)) +
geom_point(data = worst_month, aes(x = revised_date + 15, y = Score - .10),
size = 5, color = "black", fill = "red", shape = 24, stroke = 2,
inherit.aes = FALSE) +
geom_text(data = worst_month, aes(x = revised_date + 15, y = Score - .2),
label = "Minimum", inherit.aes = FALSE, color = "black", fontface = "bold")
trump_web_analysis
View(trump_web_analysis)
ggplot(trump_web_analysis %>% filter(revised_date >= mdy("January 1, 2014"),
Total_Ratings >= 30),
aes(x = revised_date + 15, y = Sub_Score, fill = analysis,
color = analysis, group = analysis)) + #Add 15 days to each month so they align better
geom_rect(xmin = ymd("2016-Nov-8") - 365, xmax = ymd("2016-Nov-8"),
ymin = -3, ymax = 2, fill = "gray75", color = "black", linetype = "dashed", size = .8) +
geom_col(color = "black", size = 1) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
scale_fill_manual("", values = c("Website" = "#c118ec", "Trump" = "#ffb00a", "Other" = "#808080"),
position = "bottom") +
scale_y_continuous(breaks = seq(-1.25, 0.5, 0.25)) +
labs(title = "PolitiFact Mean Truthfulness Score per Month, 2014 - Present",
x = "", y = "Monthly Average",
subtitle = "Shaded area indicates 12 months prior to the November 8, 2016 presidential election. Mean Truthfulness Scores are additive for Donald Trump, Websites, and Other.") +
theme(legend.position = "bottom",
legend.box.margin = margin(t = -20),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 10)) +
guides(fill = guide_legend(reverse = TRUE)) +
geom_point(data = worst_month, aes(x = revised_date + 15, y = Score - .10),
size = 5, color = "black", fill = "red", shape = 24, stroke = 2,
inherit.aes = FALSE) +
geom_text(data = worst_month, aes(x = revised_date + 15, y = Score - .2),
label = "Minimum", inherit.aes = FALSE, color = "black", fontface = "bold")
ggplot(trump_web_analysis %>% filter(revised_date >= mdy("January 1, 2014"),
Total_Ratings >= 30),
aes(x = revised_date + 15, y = Sub_Score, fill = analysis,
color = analysis, group = analysis)) + #Add 15 days to each month so they align better
geom_rect(xmin = ymd("2016-Nov-8") - 365, xmax = ymd("2016-Nov-8"),
ymin = -3, ymax = 2, fill = "gray75", color = "black", linetype = "dashed", size = .8) +
geom_col(color = "black", size = 1) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
scale_fill_manual("", values = c("Website" = "#c118ec", "Trump" = "#ffb00a", "Other" = "#808080"),
position = "bottom") +
scale_y_continuous(breaks = seq(-1.25, 0.5, 0.25)) +
labs(title = "PolitiFact Mean Truthfulness Score per Month, 2014 - Present",
x = "", y = "Monthly Average",
subtitle = "Shaded area indicates 12 months prior to the November 8, 2016 presidential election. Mean Truthfulness Scores are additive for Donald Trump, Websites, and Other.\nOnly months with 30 or more total ratings are shown.") +
theme(legend.position = "bottom",
legend.box.margin = margin(t = -20),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 10)) +
guides(fill = guide_legend(reverse = TRUE)) +
geom_point(data = worst_month, aes(x = revised_date + 15, y = Score - .10),
size = 5, color = "black", fill = "red", shape = 24, stroke = 2,
inherit.aes = FALSE) +
geom_text(data = worst_month, aes(x = revised_date + 15, y = Score - .2),
label = "Minimum", inherit.aes = FALSE, color = "black", fontface = "bold")
ggplot(trump_web_analysis %>% filter(revised_date >= mdy("January 1, 2014")),
aes(x = revised_date + 15, y = Sub_Score, fill = analysis,
color = analysis, group = analysis)) + #Add 15 days to each month so they align better
geom_rect(xmin = ymd("2016-Nov-8") - 365, xmax = ymd("2016-Nov-8"),
ymin = -3, ymax = 2, fill = "gray75", color = "black", linetype = "dashed", size = .8) +
geom_col(color = "black", size = 1) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
scale_fill_manual("", values = c("Website" = "#c118ec", "Trump" = "#ffb00a", "Other" = "#808080"),
position = "bottom") +
scale_y_continuous(breaks = seq(-1.25, 0.5, 0.25)) +
labs(title = "PolitiFact Mean Truthfulness Score per Month, 2014 - Present",
x = "", y = "Monthly Average",
subtitle = "Shaded area indicates 12 months prior to the November 8, 2016 presidential election. Mean Truthfulness Scores are additive for Donald Trump, Websites, and Other.") +
theme(legend.position = "bottom",
legend.box.margin = margin(t = -20),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 10)) +
guides(fill = guide_legend(reverse = TRUE)) +
geom_point(data = worst_month, aes(x = revised_date + 15, y = Score - .10),
size = 5, color = "black", fill = "red", shape = 24, stroke = 2,
inherit.aes = FALSE) +
geom_text(data = worst_month, aes(x = revised_date + 15, y = Score - .2),
label = "Minimum", inherit.aes = FALSE, color = "black", fontface = "bold")
ggplot(trump_web_analysis %>% filter(revised_date >= mdy("January 1, 2014"),
Total_Ratings >= 30),
aes(x = revised_date + 15, y = Sub_Score, fill = analysis,
color = analysis, group = analysis)) + #Add 15 days to each month so they align better
geom_rect(xmin = ymd("2016-Nov-8") - 365, xmax = ymd("2016-Nov-8"),
ymin = -3, ymax = 2, fill = "gray75", color = "black", linetype = "dashed", size = .8) +
geom_col(color = "black", size = 1) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
scale_fill_manual("", values = c("Website" = "#c118ec", "Trump" = "#ffb00a", "Other" = "#808080"),
position = "bottom") +
scale_y_continuous(breaks = seq(-1.25, 0.5, 0.25)) +
labs(title = "PolitiFact Mean Truthfulness Score per Month, 2014 - Present",
x = "", y = "Monthly Average",
subtitle = "Shaded area indicates 12 months prior to the November 8, 2016 presidential election. Mean Truthfulness Scores are additive for Donald Trump, Websites, and Other.\nOnly months with 30 or more total ratings are shown.") +
theme(legend.position = "bottom",
legend.box.margin = margin(t = -20),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 10)) +
guides(fill = guide_legend(reverse = TRUE)) +
geom_point(data = worst_month, aes(x = revised_date + 15, y = Score - .10),
size = 5, color = "black", fill = "red", shape = 24, stroke = 2,
inherit.aes = FALSE) +
geom_text(data = worst_month, aes(x = revised_date + 15, y = Score - .2),
label = "Minimum", inherit.aes = FALSE, color = "black", fontface = "bold")
ggplot(truth_o_meter_ratings, aes(x = Rating, y = Proportion, fill = Rating)) +
labs(title = "PolitiFact Truth-O-Meter Ratings Since 2017") +
geom_col(color = "black", size = 1) +
geom_label(label = comma_format()(truth_o_meter_ratings$Total_Ratings)) +
scale_fill_manual(values = truth_o_meter_colors) +
scale_y_continuous(labels = percent) +
theme(legend.position = "none")
View(party_statistical_test)
# Follow these directions STEP BY STEP http://nickstrayer.me/RMarkdown_Sites_tutorial/
# Must always have an index.Rmd file
# Must always save the index.Rmd and the other .Rmd files running the below commands
setwd("D:/Everything/R/Politifact Investigation/PolitiFact-Analysis/PolitiFact-Analysis")
rmarkdown::render_site()
